on: [push]

name: build

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2  # for example testing
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: ./scripts/pre-commit
      - run: ls target/release
      - uses: actions/upload-artifact@v2
        with:
          name: libcls_ffi.so
          path: target/release/libcls_ffi.so
          if-no-files-found: error

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2  # for example testing
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: ./scripts/pre-commit
      - run: ls target/release
      - uses: actions/upload-artifact@v2
        with:
          name: libcls_ffi.dylib
          path: target/release/libcls_ffi.dylib
          if-no-files-found: error

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2  # for example testing
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: |
          cargo build --release
          python3 ffi_examples\python.py
          ls target\release
      - uses: actions/upload-artifact@v2
        with:
          name: cls_ffi.dll
          path: target\release\cls_ffi.dll
          if-no-files-found: error

  upload-artifacts:
    needs: [linux, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - run: mkdir artifacts
      - uses: actions/download-artifact@v2
        with:
          name: libcls_ffi.so
          path: artifacts
      - uses: actions/download-artifact@v2
        with:
          name: libcls_ffi.dylib
          path: artifacts
      - uses: actions/download-artifact@v2
        with:
          name: cls_ffi.dll
          path: artifacts
          
      - name: Install commitstat
        run: curl https://raw.githubusercontent.com/dropseed/commitstat/master/install.sh | bash -s -- -b $HOME/bin
      - name: Run commitstat
        run: |
          stat --format %s artifacts/libcls_ffi.so    | $HOME/bin/commitstat - --name libcls_ffi.so
          stat --format %s artifacts/libcls_ffi.dylib | $HOME/bin/commitstat - --name libcls_ffi.dylib
          stat --format %s artifacts/cls_ffi.dll      | $HOME/bin/commitstat - --name cls_ffi.dll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${GITHUB_REF##*/} artifacts/* --repo $GITHUB_REPOSITORY
